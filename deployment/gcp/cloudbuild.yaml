# Cloud Build configuration for automated deployment
steps:
  # Build dashboard image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/weather-platform/dashboard:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/weather-platform/dashboard:latest'
      - '-f'
      - 'app/Dockerfile'
      - './app'
    id: 'build-dashboard'

  # Push dashboard image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/weather-platform/dashboard'
    id: 'push-dashboard'
    waitFor: ['build-dashboard']

  # Run database migrations
  - name: 'gcr.io/google-appengine/exec-wrapper'
    args:
      - '-i'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/weather-platform/dashboard:${SHORT_SHA}'
      - '-s'
      - '${PROJECT_ID}:${_REGION}:weather-db'
      - '-e'
      - 'DB_HOST=127.0.0.1'
      - '-e'
      - 'DB_PORT=5432'
      - '-e'
      - 'DB_NAME=weather_db'
      - '-e'
      - 'DB_USER=weather_user'
      - '--'
      - 'sh'
      - '-c'
      - 'cd /app && python -c "import psycopg2; conn = psycopg2.connect(host=\"127.0.0.1\", port=5432, database=\"weather_db\", user=\"weather_user\", password=\"${_DB_PASSWORD}\"); cur = conn.cursor(); cur.execute(open(\"../postgres/init.sql\").read()); conn.commit(); conn.close()"'
    id: 'migrate-database'
    waitFor: ['push-dashboard']
    secretEnv: ['_DB_PASSWORD']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'weather-dashboard'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/weather-platform/dashboard:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-cloudsql-instances'
      - '${PROJECT_ID}:${_REGION}:weather-db'
      - '--set-env-vars'
      - 'DB_HOST=/cloudsql/${PROJECT_ID}:${_REGION}:weather-db,DB_PORT=5432,DB_NAME=weather_db,DB_USER=weather_user'
      - '--set-secrets'
      - 'DB_PASSWORD=weather-db-password:latest'
      - '--service-account'
      - 'weather-platform-sa@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '100'
      - '--concurrency'
      - '100'
    id: 'deploy-cloud-run'
    waitFor: ['migrate-database']

# Use Secret Manager for database password
availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/weather-db-password/versions/latest
      env: '_DB_PASSWORD'

# Substitutions
substitutions:
  _REGION: europe-west1

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout for the entire build
timeout: '1200s'