services:
  db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: weather_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-weather_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-weather_pass}
      POSTGRES_DB: ${POSTGRES_DB:-weather_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-weather_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - weather_network

  dashboard:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: weather_dashboard
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-weather_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-weather_pass}
      POSTGRES_DB: ${POSTGRES_DB:-weather_db}
      # Also set DB_* variables for ETL compatibility
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-weather_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-weather_pass}
      DB_NAME: ${POSTGRES_DB:-weather_db}
      DATA_DIR: /data
    ports:
      - "8501:8501"
    volumes:
      - ./app:/app
      - ./data:/data
    command: streamlit run streamlit_app/main.py --server.port=8501 --server.address=0.0.0.0
    networks:
      - weather_network

volumes:
  postgres_data:

networks:
  weather_network:
    driver: bridge